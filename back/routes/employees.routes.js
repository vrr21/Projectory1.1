const express = require('express');
const router = express.Router();
const path = require('path');
const multer = require('multer');
const { poolConnect, pool, sql } = require('../config/db');
const employeesController = require('../controllers/employees.controller');  // üü¢ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Ü–µ–ª–∏–∫–æ–º
const {
  updateEmployeeProfile,
  uploadAvatar,
  getExtendedEmployeeList,
  getAllEmployeesFull,
  getAllEmployeesExtended,
  getEmployeeById,
  getTasksByEmployee,
  getEmployeesByTeam
} = employeesController;  // üü¢ –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
const { getExtendedEmployees } = require('../controllers/employeesExtended.controller');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è multer
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, path.join(__dirname, '../uploads'));
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    const uniqueName = `${Date.now()}-${file.fieldname}${ext}`;
    cb(null, uniqueName);
  },
});

const upload = multer({ storage });

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–∫—Ä–æ–º–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤)
router.get('/', async (req, res) => {
  try {
    await poolConnect;
    const result = await pool.request().query(`
      SELECT 
        ID_User,
        First_Name,
        Last_Name,
        Email
      FROM Users
      WHERE ID_Role != 1
    `);
    res.json(result.recordset);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üîç –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
router.get('/search', async (req, res) => {
  const { q } = req.query;
  try {
    await poolConnect;
    const result = await pool.request()
      .input('query', sql.NVarChar, `%${q}%`)
      .query(`
        SELECT 
          ID_User AS id,
          First_Name + ' ' + Last_Name AS fullName,
          Email
        FROM Users
        WHERE First_Name LIKE @query OR Last_Name LIKE @query OR Email LIKE @query
      `);
    res.json(result.recordset);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤' });
  }
});

// üîó –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ
router.get('/by-team', getEmployeesByTeam);

// üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
router.put('/update', updateEmployeeProfile);

// üìé –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
router.post('/upload-avatar', upload.single('avatar'), uploadAvatar);

// üìë –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—è–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
router.get('/extended', getAllEmployeesExtended);

// üìë –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—è–º–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Roles
router.get('/full', getAllEmployeesFull);

// üïí –°—Ç–∞—Ä—ã–π –º–∞—Ä—à—Ä—É—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
router.get('/legacy-extended', getExtendedEmployeeList);

// üß© –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞)
router.get('/alt-extended', getExtendedEmployees);

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
router.get('/:id/tasks', getTasksByEmployee);

// üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ ID
router.get('/:id', getEmployeeById);

// ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å –∫–∞—Å–∫–∞–¥–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
router.delete('/users/:id', employeesController.deleteEmployee);  // üü¢ –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!

module.exports = router;
