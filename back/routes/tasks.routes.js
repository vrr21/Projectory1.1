const express = require('express');
const router = express.Router();
const taskController = require('../controllers/task.controller');
const { poolConnect, pool, sql } = require('../config/db');

// üîπ –õ–æ–≥ ID –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
router.get('/employee/:id', (req, res, next) => {
  console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–¥–∞—á–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å ID:', req.params.id);
  next();
}, taskController.getTasksByEmployee);

// üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏: ?employee=2&team=1
router.get('/', taskController.getAllTasks);

// üîπ –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é
router.get('/search', async (req, res) => {
  const { q } = req.query;
  try {
    await poolConnect;
    const result = await pool.request()
      .input('query', sql.NVarChar, `%${q}%`)
      .query(`
        SELECT ID_Task, Task_Name
        FROM Tasks
        WHERE Task_Name LIKE @query OR Description LIKE @query
      `);
    res.json(result.recordset);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á', error: error.message });
  }
});

// üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ —Å –¥–µ—Ç–∞–ª—è–º–∏
router.get('/details', taskController.getTasksWithDetails);

// üîπ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –∫–æ–º–∞–Ω–¥–µ
router.get('/projects', taskController.getProjects);

// üîπ –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
router.post('/', taskController.createTask);

// üîπ –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É
router.put('/:id', taskController.updateTask);

// üîπ –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
router.delete('/:id', taskController.deleteTask);

// üîπ –ó–∞–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å "–ó–∞–≤–µ—Ä—à–µ–Ω–∞")
router.patch('/:id/close', taskController.closeTask);

// üîπ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
router.put('/:taskId/status', taskController.updateEmployeeTaskStatus);

// üîπ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∞—Ä—Ö–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
router.delete('/archive/all', taskController.deleteAllArchivedTasks);

module.exports = router;
